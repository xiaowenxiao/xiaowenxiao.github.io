<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on x&#39;Blog</title>
    <link>https://xiaowenxiao.github.io/categories/k8s/</link>
    <description>Recent content in k8s on x&#39;Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 24 Dec 2020 15:12:44 +0800</lastBuildDate>
    
        <atom:link href="https://xiaowenxiao.github.io/categories/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>k8s的健康检查</title>
      <link>https://xiaowenxiao.github.io/k8s%E7%9A%84%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:44 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/k8s%E7%9A%84%E5%81%A5%E5%BA%B7%E6%A3%80%E6%9F%A5/</guid>
      <description>k8s的健康检查 默认的健康检查 强大的自愈能力是 Kubernetes 这类容器编排引擎的一个重要特性。自愈的默认实现方式是自动重启发生故障的容器。除此之外，用户还</description>
    </item>
    
    <item>
      <title>ingress-nginx部署</title>
      <link>https://xiaowenxiao.github.io/ingress-nginx%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:43 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/ingress-nginx%E9%83%A8%E7%BD%B2/</guid>
      <description>ingress-nginx部署 Ingress 与 ingress-controller Ingress 是 kubernetes 的一种资源对象，该对象允许外部访问 kubernetes 服务， 通过创建规则集合来配置访问权限，这些规则定义了哪些入站连</description>
    </item>
    
    <item>
      <title>StatefulSet部署jenkins</title>
      <link>https://xiaowenxiao.github.io/statefulset%E9%83%A8%E7%BD%B2jenkins/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:43 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/statefulset%E9%83%A8%E7%BD%B2jenkins/</guid>
      <description>StatefulSet部署jenkins ![PVC、PV动态供给](_v_images/20200603185604805_23577.pn</description>
    </item>
    
    <item>
      <title>K8s集群部署</title>
      <link>https://xiaowenxiao.github.io/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:42 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid>
      <description>K8s集群部署 环境 主机名 系统版本 ip 角色 master-01 Ubuntu 18.04.4 LTS 10.10.10.1 master、ndoe、etcd1 master-02 Ubuntu 18.04.4 LTS 10.10.10.2 master、ndoe、etcd2 master-03 Ubuntu 18.04.4 LTS 10.10.10.3 ma</description>
    </item>
    
    <item>
      <title>Pro etheus监控告警</title>
      <link>https://xiaowenxiao.github.io/prometheus%E7%9B%91%E6%8E%A7%E5%91%8A%E8%AD%A6/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:42 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/prometheus%E7%9B%91%E6%8E%A7%E5%91%8A%E8%AD%A6/</guid>
      <description>参考书籍： prometheus-book 监控-Prometheus+Grafana+node-exporter Prometheus告警简介 从架构图中可以看出其大概的工作</description>
    </item>
    
    <item>
      <title>Harbor</title>
      <link>https://xiaowenxiao.github.io/harbor/</link>
      <pubDate>Thu, 24 Dec 2020 15:12:41 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/harbor/</guid>
      <description>Harbor 软件包：harbor-offline-installer-v2.0.0.tgz Harbor仓库安装 # 解压 docker-compose，放到</description>
    </item>
    
    <item>
      <title>EFK部署</title>
      <link>https://xiaowenxiao.github.io/efk%E9%83%A8%E7%BD%B2/</link>
      <pubDate>Thu, 24 Dec 2020 15:02:22 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/efk%E9%83%A8%E7%BD%B2/</guid>
      <description>EFK部署 参考链接： 阳明的博客</description>
    </item>
    
    <item>
      <title>k8s暴露外部应用服务</title>
      <link>https://xiaowenxiao.github.io/k8s%E6%9A%B4%E9%9C%B2%E5%A4%96%E9%83%A8%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Thu, 24 Dec 2020 14:54:44 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/k8s%E6%9A%B4%E9%9C%B2%E5%A4%96%E9%83%A8%E5%BA%94%E7%94%A8%E6%9C%8D%E5%8A%A1/</guid>
      <description>k8s暴露外部应用服务 外部的应用（ip+端口）以service的方式在k8s集群暴露 &amp;gt;&amp;gt; cat jumpserver.yaml apiVersion: v1 kind: Service metadata: name: jumpserver-service spec: ports: - port: 80 protocol: TCP targetPort: 80 --- apiVersion: v1 kind: Endpoints metadata: name: jumpserver-service subsets:</description>
    </item>
    
    <item>
      <title>K8s命令</title>
      <link>https://xiaowenxiao.github.io/k8s%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Thu, 24 Dec 2020 14:47:26 +0800</pubDate>
      
      <guid>https://xiaowenxiao.github.io/k8s%E5%91%BD%E4%BB%A4/</guid>
      <description>K8s命令 创建 kubectl run nginx --replicas=1 --labels=&amp;#34;app=nginx-example&amp;#34; --image=nginx:1.10 --port=80 查看 kubectl get deploy kubectl get pods --show-labels kubectl get pods -l app=example kubectl get pods -o wide 发布 kubectl expose deployment nginx --port=88 --type=NodePort --target-port=80 --name=nginx-service kubectl describe service nginx-service 故障排查 kubectl describe TYPE NAME_PREFIX kubectl logs nginx-xxx kubectl exec -ti nginx-xxx bash 更新 kubectl set image deployment/nginx nginx=nginx:1.11</description>
    </item>
    
  </channel>
</rss>
